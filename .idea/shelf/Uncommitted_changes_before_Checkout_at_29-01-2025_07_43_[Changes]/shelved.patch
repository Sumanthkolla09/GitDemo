Index: src/test/java/TestComponents/BaseTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package TestComponents;\r\n\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport io.github.bonigarcia.wdm.WebDriverManager;\r\nimport org.SeleniumTest.Landingpage;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.openqa.selenium.Dimension;\r\nimport org.openqa.selenium.OutputType;\r\nimport org.openqa.selenium.TakesScreenshot;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\nimport org.openqa.selenium.chrome.ChromeOptions;\r\nimport org.testng.annotations.AfterMethod;\r\nimport org.testng.annotations.BeforeMethod;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.time.Duration;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Properties;\r\n\r\npublic class BaseTest {\r\n    public WebDriver driver;\r\n    public Landingpage landingpage;\r\n\r\n    public WebDriver InitializeBrower() throws IOException {\r\n        Properties properties = new Properties();\r\n        FileInputStream file = new FileInputStream(System.getProperty(\"user.dir\")\r\n                + \"//src//main//java//Resources//GlobalData.properties\");\r\n        properties.load(file);\r\n        String browsername = System.getProperty(\"browser\")!=null ?  System.getProperty(\"browser\") : properties.getProperty(\"browser\");\r\n        //String browsername = properties.getProperty(\"browser\");\r\n\r\n        if (browsername.contains(\"chrome\")) {\r\n            ChromeOptions options = new ChromeOptions();\r\n            options.addArguments(\"headless\");\r\n            WebDriverManager.chromedriver().setup();\r\n            if(browsername.contains(\"headless\")){\r\n                options.addArguments(\"headless\");\r\n            }\r\n            driver = new ChromeDriver(options);\r\n            driver.manage().window().setSize(new Dimension(1440,900));\r\n        } else if (browsername.equalsIgnoreCase(\"firefox\")) {\r\n            //Firefox\r\n        } else if (browsername.equalsIgnoreCase(\"edge\")) {\r\n            //Firefox\r\n        }\r\n        driver.manage().window().maximize();\r\n        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));\r\n        return driver;\r\n    }\r\n\r\n    public List<HashMap<String, String>> GetJsonDataToHasMap(String filepath) throws IOException {\r\n\r\n        //Reading the Json to String\r\n        String jsonContent = FileUtils.readFileToString(new File(filepath));\r\n\r\n        //Convert String to hashMap - jackson databind used to converter\r\n        ObjectMapper mapper = new ObjectMapper();\r\n        List<HashMap<String, String>> data = mapper.readValue(jsonContent,\r\n                new TypeReference<List<HashMap<String, String>>>() {\r\n                });\r\n        return data;\r\n        //Data will store the List of data in Hashmap {map, map}\r\n    }\r\n\r\n\r\n    public String GetScreenshot(String testCaseName, WebDriver driver) throws IOException {\r\n        TakesScreenshot ts = (TakesScreenshot) driver;\r\n        File source = ts.getScreenshotAs(OutputType.FILE);\r\n        File file = new File(System.getProperty(\"user.dir\") + \"//reports//\" + testCaseName + \".png\");\r\n        FileUtils.copyFile(source, file);\r\n        return System.getProperty(\"user.dir\") + \"//reports//\" + testCaseName + \".png\";\r\n    }\r\n\r\n    @BeforeMethod(alwaysRun = true)\r\n    public Landingpage LaunchApplication() throws IOException {\r\n        driver = InitializeBrower();\r\n        landingpage = new Landingpage(driver);\r\n        landingpage.GotoUrl();\r\n        return landingpage;\r\n    }\r\n\r\n    @AfterMethod(alwaysRun = true)\r\n    public void Closebrowser() throws InterruptedException {\r\n        Thread.sleep(2000);\r\n        driver.close();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/TestComponents/BaseTest.java b/src/test/java/TestComponents/BaseTest.java
--- a/src/test/java/TestComponents/BaseTest.java	(revision 4c5c38e1ba9286429fa83abeb58f7ec5408607b8)
+++ b/src/test/java/TestComponents/BaseTest.java	(date 1736219542647)
@@ -23,6 +23,7 @@
 import java.util.Properties;
 
 public class BaseTest {
+
     public WebDriver driver;
     public Landingpage landingpage;
 
Index: src/main/java/org/SeleniumTest/AbstractComponent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.SeleniumTest;\r\n\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.support.FindBy;\r\nimport org.openqa.selenium.support.PageFactory;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\n\r\nimport java.time.Duration;\r\n\r\npublic class AbstractComponent {\r\n    WebDriver driver;\r\n    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));\r\n    public AbstractComponent(WebDriver driver){\r\n        this.driver=driver;\r\n        PageFactory.initElements(driver, this);\r\n    }\r\n\r\n    @FindBy(css = \"[routerlink*=cart]\")\r\n    WebElement clickoncart;\r\n\r\n    @FindBy(css = \"[routerlink*='myorders']\")\r\n    WebElement orderHeader;\r\n\r\n\r\n\r\n    public void WaitforElementtoAppear(By findBy){\r\n        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(findBy));\r\n    }\r\n\r\n    public void WaitforElementtoAppear(WebElement findBy){\r\n        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));\r\n        wait.until(ExpectedConditions.visibilityOf(findBy));\r\n    }\r\n\r\n    public void WaitforElementtoDisappear(WebElement element){\r\n        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));\r\n        wait.until(ExpectedConditions.visibilityOf(element));\r\n    }\r\n\r\n    public CartPage ClickOncart(){\r\n        clickoncart.click();\r\n        CartPage cartPage = new CartPage(driver);\r\n        return cartPage;\r\n    }\r\n\r\n    public OrderPage GoToOrderPage(){\r\n        orderHeader.click();\r\n        OrderPage orderPage = new OrderPage(driver);\r\n        return orderPage;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/SeleniumTest/AbstractComponent.java b/src/main/java/org/SeleniumTest/AbstractComponent.java
--- a/src/main/java/org/SeleniumTest/AbstractComponent.java	(revision 4c5c38e1ba9286429fa83abeb58f7ec5408607b8)
+++ b/src/main/java/org/SeleniumTest/AbstractComponent.java	(date 1736219499665)
@@ -11,7 +11,7 @@
 import java.time.Duration;
 
 public class AbstractComponent {
-    WebDriver driver;
+    public WebDriver driver;
     WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
     public AbstractComponent(WebDriver driver){
         this.driver=driver;
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 4c5c38e1ba9286429fa83abeb58f7ec5408607b8)
+++ b/.idea/misc.xml	(date 1736219446307)
@@ -1,6 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 4c5c38e1ba9286429fa83abeb58f7ec5408607b8)
+++ b/.idea/compiler.xml	(date 1736219500007)
@@ -3,6 +3,12 @@
   <component name="CompilerConfiguration">
     <annotationProcessing>
       <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="SeleniumFrameWorkDesign" />
+      </profile>
     </annotationProcessing>
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b75bf2c8-2dd6-445b-a3da-018470f0b0a6\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/SeleniumTest/EntireE2E.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/org/SeleniumTest/EntireE2E.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"Sumanthkolla09\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/Sumanthkolla09/GitDemo.git\",\r\n    \"accountId\": \"0cf462d2-624b-4422-a0ae-5e27201f6f4e\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 4\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2rDLX2e31z5pbOVxkClIQjHPNXi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"develop\",\r\n    \"kotlin-language-version-configured\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b75bf2c8-2dd6-445b-a3da-018470f0b0a6\" name=\"Changes\" comment=\"\" />\r\n      <created>1736088736213</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1736088736213</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4c5c38e1ba9286429fa83abeb58f7ec5408607b8)
+++ b/.idea/workspace.xml	(date 1736219542722)
@@ -5,8 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b75bf2c8-2dd6-445b-a3da-018470f0b0a6" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/org/SeleniumTest/EntireE2E.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/SeleniumTest/EntireE2E.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/SeleniumTest/AbstractComponent.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/SeleniumTest/AbstractComponent.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/TestComponents/BaseTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/TestComponents/BaseTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -16,34 +19,36 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN",
-    "assignee": "Sumanthkolla09"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;Sumanthkolla09&quot;
   }
-}]]></component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/Sumanthkolla09/GitDemo.git",
-    "accountId": "0cf462d2-624b-4422-a0ae-5e27201f6f4e"
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/Sumanthkolla09/GitDemo.git&quot;,
+    &quot;accountId&quot;: &quot;0cf462d2-624b-4422-a0ae-5e27201f6f4e&quot;
   }
-}]]></component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 4
-}]]></component>
+}</component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
   <component name="ProjectId" id="2rDLX2e31z5pbOVxkClIQjHPNXi" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "develop",
-    "kotlin-language-version-configured": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;TestNG.C:/Users/ADMIN/GitDemo/testsuites/PurchaseOrder.xml.executor&quot;: &quot;Run&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
